- name: Install kops
  gather_facts: true
  collections:
    - community.general
  hosts: "{{ host_group }}"
  
  vars:
    ansible_python_interpreter: "/usr/bin/python3"
    playbook_file_path: "{{ (lookup('file', '/proc/self/cmdline') | regex_replace('\u0000',' ')).split() | select('match','^.*[.]ya?ml$') | list | first }}"
    playbook_file_name: "{{ playbook_file_path | basename }}"

  tasks:

  - name: Check if Kops is installed
    shell: |
      kops version
    register: kops_installed
    ignore_errors: yes

  - name: Print kops version version if installed
    debug:
      msg: "Kops {{ kops_installed.stdout }} version is already installed."
    when: kops_installed.rc == 0

  - name: Install required packages for kops
    become: yes
    become_user: root
    apt:
      name: 
        - python3-pip
        - groff
        - jq
        - curl
    when: kops_installed.rc != 0 and ansible_os_family == "Debian"

  - name: Get latest kops version
    uri:
      url: "https://api.github.com/repos/kubernetes/kops/releases/latest"
      return_content: yes
    register: latest_release
    when: kops_installed.rc != 0

  - name: Download kops binary
    become: yes
    become_user: root
    get_url:
      url: "https://github.com/kubernetes/kops/releases/download/{{ latest_release.json.tag_name }}/kops-linux-amd64"
      dest: /usr/local/bin/kops
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"
      mode: 0755
    when: kops_installed.rc != 0
  
  - name: Wait for AWS CLI package to be downloaded
    become: yes
    become_user: root
    wait_for:
      path: /usr/local/bin/kops
      state: present
    when: kops_installed.rc != 0

  - name: Wait for kops installation to finish
    shell: |
      kops version
    register: kops_new_installed
    until: kops_new_installed.rc == 0 
    retries: 60  # Adjust the number of retries as needed
    delay: 5     # Delay between retries
    when: kops_installed.rc != 0