name: Deploy Infrastructure

on:
  workflow_run:
    workflows:
      - "Trigger Master Workflow"
    types:
      - completed

jobs:

  deploy:
    runs-on: ubuntu-latest

    env:
      INFRA_GIT_REPO_OWNER: "CAL-REPO"
      INFRA_GIT_REPO_NAME: "CAL-INFRA"
      INFRA_GIT_REPO_TOKEN: ${{ secrets.CAL_SC_INFRA_GIT_REPO_TOKEN }}
      OPS_USER_NAME: ${{ secrets.CAL_SC_OPS_USER_NAME }}
      OPS_USER_PW: ${{ secrets.CAL_SC_OPS_USER_PW }}
      OPS_GIT_USER_NAME: ${{ secrets.GIT_REPO_USER_NAME_OPS_1 }}
      OPS_GIT_USER_EMAIL: ${{ secrets.GIT_REPO_USER_EMAIL_OPS_1 }}
      OPS_GIT_REPO_OWNER: "CAL-REPO"
      OPS_GIT_REPO_NAME: "CAL-OPS"
      OPS_GIT_REPO_PERSONAL_TOKEN: ${{ secrets.GIT_REPO_PERSONAL_TOKEN_OPS_1 }}
      DEV_GIT_REPO_OWNER: "CAL-REPO"
      DEV_GIT_REPO_NAME: "CAL-DEV"
      DEV_GIT_REPO_PERSONAL_TOKEN: ${{ secrets.GIT_REPO_PERSONAL_TOKEN_DEV_1 }}
      INFRA_TF_BACKEND_S3_BUCKET_REGION: ${{ secrets.CAL_SC_TF_BACKEND_S3_BUCKET_REGION }}
      INFRA_TF_BACKEND_S3_BUCKET_NAME: ${{ secrets.CAL_SC_TF_BACKEND_S3_BUCKET_NAME }}
      INFRA_TF_BACKEND_S3_BUCKET_OBJ: ${{ secrets.CAL_SC_TF_BACKEND_S3_BUCKET_OBJ }}
      INFRA_TF_BACKEND_S3_ACCESS_KEY: ${{ secrets.CAL_SC_TF_BACKEND_S3_ACCESS_KEY }}
      INFRA_TF_BACKEND_S3_SECRET_KEY: ${{ secrets.CAL_SC_TF_BACKEND_S3_SECRET_KEY }}
      INFRA_TF_WORKSPACE_NAME_DEV: "dev"
      INFRA_TF_WORKSPACE_NAME_PROD: "prod"
      CLOUDFLARE_EMAIL: ${{ secrets.CLOUDFLARE_EMAIL_MAIN_1 }}
      CLOUDFLARE_API_KEY: ${{ secrets.CLOUDFLARE_API_KEY_MAIN_1 }}
      CLOUDFLARE_DOMAIN: ${{ secrets.CLOUDFLARE_DOMAIN_MAIN_1 }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
            ref: deploy
            path: deploy

      - name: Set aws profile for terraform from secret to file on github action runner
        working-directory: deploy/1.WORKFLOWS_SCRIPT
        env:
          AWS_IAM_KEY_CSV_DATA: ${{ secrets.CAL_SC_CSV_AWS_PROFILE_ENCODED }}
        run: |
          bash "set_aws_profile_with_csv_data_to_local.sh"

      - name: Make s3 bucket for terraform backend
        working-directory: deploy/1.WORKFLOWS_SCRIPT
        env:
          AWS_ACCESS_KEY_ID: ${{ env.INFRA_TF_BACKEND_S3_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ env.INFRA_TF_BACKEND_S3_SECRET_KEY }}
          AWS_REGION: ${{ env.INFRA_TF_BACKEND_S3_BUCKET_REGION }}
          S3_BUCKET_NAME: ${{ env.INFRA_TF_BACKEND_S3_BUCKET_NAME }}
        run: |
          bash "make_s3_bucket.sh"

      - name: Set up terraform version
        uses: hashicorp/setup-terraform@v2

      - name: Initialize terraform for infrastruture
        working-directory: deploy/2.TERRAFORM/01.SEOUL
        run: |
          terraform init \
            -backend-config="region=${{ env.INFRA_TF_BACKEND_S3_BUCKET_REGION }}" \
            -backend-config="bucket=${{ env.INFRA_TF_BACKEND_S3_BUCKET_NAME }}" \
            -backend-config="key=${{ env.INFRA_TF_BACKEND_S3_BUCKET_OBJ }}" \
            -backend-config="access_key=${{ env.INFRA_TF_BACKEND_S3_ACCESS_KEY }}" \
            -backend-config="secret_key=${{ env.INFRA_TF_BACKEND_S3_SECRET_KEY }}" \
            -backend-config="encrypt=true"

      - name: Make terraform workspace for infrastructure
        working-directory: deploy/2.TERRAFORM/01.SEOUL
        env:
          TERRAFORM_WORKSPACE_NAME: ${{ env.INFRA_TF_WORKSPACE_NAME_DEV }}
        run: |
          bash "../../1.WORKFLOWS_SCRIPT/make_terraform_workspace.sh"

      - name: Select terraform workspace for infrastructure
        working-directory: deploy/2.TERRAFORM/01.SEOUL
        run: |
          terraform workspace select ${{ env.INFRA_TF_WORKSPACE_NAME_DEV }}

      - name: Plan and Apply Terraform develop Infrastruture
        working-directory: deploy/2.TERRAFORM/01.SEOUL
        env:
          TF_VAR_CF_DOMAIN_MAIN: ${{ env.CLOUDFLARE_DOMAIN }}
          TF_VAR_AWS_KEY_S3_BUCKET_NAME: ${{ env.INFRA_TF_BACKEND_S3_BUCKET_NAME }}
          TF_VAR_AWS_KOPS_STATE_S3_BUCKET: ${{ env.INFRA_TF_BACKEND_S3_BUCKET_NAME }}
          TF_VAR_OPS_USER_NAME: ${{ env.OPS_USER_NAME }}
          TF_VAR_OPS_USER_PW: ${{ env.OPS_USER_PW }}
          TF_VAR_OPS_GIT_USER_NAME: ${{ env.OPS_GIT_USER_NAME }}
          TF_VAR_OPS_GIT_USER_EMAIL: ${{ env.OPS_USER_EMAIL }}  
          TF_VAR_OPS_GIT_REPO_URL: "https://github.com/${{ env.OPS_GIT_REPO_OWNER }}/${{ env.OPS_GIT_REPO_NAME }}.git"
          TF_VAR_OPS_GIT_REPO_AUTH_URL: "https://${{ env.OPS_GIT_REPO_OWNER }}:${{ env.OPS_GIT_REPO_PERSONAL_TOKEN }}@github.com/${{ env.OPS_GIT_REPO_OWNER }}/${{ env.OPS_GIT_REPO_NAME }}.git"
        run: |
          terraform validate
          terraform plan -var-file="./ENV/dev.tfvars"
          terraform apply -var-file="./ENV/dev.tfvars" --auto-approve

        